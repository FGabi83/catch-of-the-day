{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","tyoe","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","console","log","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","localStorageRef","localStorage","getItem","match","params","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.ff03e425.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n  \r\n  myInput = React.createRef();\r\n  static propTypes = {\r\n    history: PropTypes.object\r\n  };\r\n  \r\n  goToStore = event => {\r\n    event.preventDefault();\r\n    //get the text from the input\r\n    const storeName = this.myInput.current.value;\r\n    //change the page to /store/whatever-they-entered\r\n    this.props.history.push(`/store/${storeName}`); //this is a prop that is passed down from the Router because it is a child of the Router\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter a Store</h2>\r\n        <input type=\"text\" ref={this.myInput} required placeholder=\"Store Name\" defaultValue={getFunName()}/> \r\n        <button tyoe=\"submit\">Visit Store →</button>\r\n      </form> \r\n    )  \r\n   }\r\n  }\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/*Stateless Functional Component*/\r\n\r\nconst Header = (props) => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch \r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">of</span>\r\n        <span className=\"the\">the</span>\r\n      </span>\r\n      Day \r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>  \r\n    </h3>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired\r\n};\r\n\r\n/*\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      \r\n      <header className=\"top\">\r\n        <h1>Catch \r\n          <span className=\"ofThe\">\r\n            <span className=\"of\">of</span>\r\n            <span className=\"the\">the</span>\r\n          </span>\r\n          Day \r\n        </h1>\r\n        <h3 className=\"tagline\">\r\n          <span>{this.props.tagline}</span>  \r\n        </h3>\r\n      </header>\r\n      \r\n                 \r\n    )\r\n  }\r\n}*/\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func\r\n  };\r\n  renderOrder = key => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 500, exit: 500 }\r\n    };\r\n    \r\n    // Make sure the fish is loaded before we continue\r\n    if (!fish) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition \r\n                classNames=\"count\" \r\n                key={count} \r\n                timeout={{ enter: 500, exit: 500 }}>\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name} \r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func\r\n  };\r\n  \r\n  createFish = event => {\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value), //convert to number\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value\r\n    };\r\n    this.props.addFish(fish);\r\n    //refresh the form\r\n    event.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\r\n        <select name=\"status\"ref={this.statusRef} >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n        <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n      \r\n        \r\n    )\r\n  }\r\n}\r\n\r\nexport default AddFishForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func\r\n  };\r\n\r\n  handleChange = event => {\r\n     // update that fish\r\n    //take a copy of the current fish\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          onChange={this.handleChange} \r\n          value={this.props.fish.name} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          name=\"price\" \r\n          onChange={this.handleChange} \r\n          value={this.props.fish.price} \r\n        />\r\n        <select \r\n          type=\"text\" \r\n          name=\"status\" \r\n          onChange={this.handleChange} \r\n          value={this.props.fish.status}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea \r\n          name=\"desc\" \r\n          onChange={this.handleChange} \r\n          value={this.props.fish.desc} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          name=\"image\" \r\n          onChange={this.handleChange} \r\n          value={this.props.fish.image} \r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditFishForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = props => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory.</p>\r\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\r\n      Log In With GitHub\r\n    </button>\r\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\r\n      Log In With Facebook\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  /*apiKey: \"AIzaSyDQJwn7deqigQ_Rr8kVrc64mPnCsf6wGgc\",\r\n  authDomain: \"catch-of-the-day-farkas-gabi.firebaseapp.com\",\r\n  databaseURL: \"https://catch-of-the-day-farkas-gabi-default-rtdb.europe-west1.firebasedatabase.app\"*/\r\n  apiKey: \"AIzaSyCF5Dlq4qSRkYnNOGyBWp7jPsc5yDmr-S0\",\r\n  authDomain: \"cofd-gabi.firebaseapp.com\",\r\n  databaseURL: \"https://cofd-gabi-default-rtdb.europe-west1.firebasedatabase.app\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// This is a named export\r\nexport { firebaseApp };\r\n\r\n// This is a default export \r\nexport default base;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n    addFish: PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async authData => {\r\n    console.log('logging in!');\r\n    // 1 .Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(store);\r\n    // 2. Claim it if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      });\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  };\r\n\r\n  authenticate = provider => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n    \r\n  };\r\n\r\n\r\n  logout = async () => {\r\n    console.log(\"Logging out!\");\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2. check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // 3. They must be the owner, just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n   details: PropTypes.shape({\r\n     image: PropTypes.string,\r\n     name: PropTypes.string,\r\n     price: PropTypes.number,\r\n     desc: PropTypes.string,\r\n     status: PropTypes.string\r\n   }),\r\n   addToOrder: PropTypes.func\r\n  }\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === 'available';\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {this.props.details.name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>{isAvailable ? 'Add To Cart' : 'Sold Out!'}</button>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Fish;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object\r\n  };\r\n\r\n  componentDidMount(){\r\n    // first reinstate our local storage\r\n    const localStorageRef = localStorage.getItem(this.props.match.params.storeId);\r\n    if(localStorageRef){\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n    this.ref = base.syncState(`${this.props.match.params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes'\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n    \r\n  }\r\n\r\n  componentWillUnmount(){\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n\r\n  addFish = fish => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    //take a copy of the current state\r\n    const fishes = {...this.state.fishes };\r\n    //update that state\r\n    fishes[key] = updatedFish;\r\n    //set that to state\r\n    this.setState({ fishes });\r\n  } \r\n  \r\n  deleteFish = (key) => {\r\n    //take a copy of state\r\n    const fishes = {...this.state.fishes };\r\n    //update the state\r\n    fishes[key] = null; //firebase requires null to delete\r\n    //update state\r\n    this.setState({ fishes });\r\n  }\r\n\r\n \r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = key => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeFromOrder = key => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Remove that item from order\r\n    delete order[key];\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order \r\n          fishes={this.state.fishes} \r\n          order={this.state.order} \r\n          removeFromOrder={this.removeFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found!!!!</h2>\r\n    </div>\r\n    );\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\n\r\nrender(<Router/>, document.querySelector('#main'));"],"sourceRoot":""}